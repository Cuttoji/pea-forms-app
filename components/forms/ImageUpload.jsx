"use client";
import React, { useState, useRef, useEffect } from 'react';

const ImageUpload = ({ onImageSelected, initialImageUrl = null, disabled = false }) => {
  const [preview, setPreview] = useState(initialImageUrl);
  const [objectUrl, setObjectUrl] = useState(null); // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö object URL ‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡∏∂‡πâ‡∏ô
  const fileInputRef = useRef(null);
  const videoRef = useRef(null); // Ref ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö video element ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏à‡∏≤‡∏Å‡∏Å‡∏•‡πâ‡∏≠‡∏á
  const canvasRef = useRef(null); // Ref ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö canvas element ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏±‡∏ö‡∏†‡∏≤‡∏û
  const [showCamera, setShowCamera] = useState(false); // State ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏Ç‡∏≠‡∏á‡∏Å‡∏•‡πâ‡∏≠‡∏á
  const [videoStream, setVideoStream] = useState(null); // State ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡πá‡∏ö stream ‡∏Ç‡∏≠‡∏á‡∏Å‡∏•‡πâ‡∏≠‡∏á

  // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï preview ‡πÄ‡∏°‡∏∑‡πà‡∏≠ initialImageUrl ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô
  useEffect(() => {
    setPreview(initialImageUrl);
  }, [initialImageUrl]);

  // Cleanup object URL ‡πÄ‡∏°‡∏∑‡πà‡∏≠ preview ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏´‡∏£‡∏∑‡∏≠ component unmount
  useEffect(() => {
    return () => {
      if (objectUrl) {
        URL.revokeObjectURL(objectUrl);
      }
    };
  }, [objectUrl]);

  // Cleanup: ‡∏´‡∏¢‡∏∏‡∏î stream ‡∏Ç‡∏≠‡∏á‡∏Å‡∏•‡πâ‡∏≠‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠ component unmount ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏•‡πâ‡∏≠‡∏á‡∏ñ‡∏π‡∏Å‡∏õ‡∏¥‡∏î
  useEffect(() => {
    return () => {
      if (videoStream) {
        videoStream.getTracks().forEach(track => track.stop());
      }
    };
  }, [videoStream]);

  const handleFileChange = (event) => {
    const file = event.target.files[0];
    if (file) {
      if (showCamera) stopCamera(); // ‡∏ñ‡πâ‡∏≤‡∏Å‡∏•‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà ‡πÉ‡∏´‡πâ‡∏´‡∏¢‡∏∏‡∏î‡∏Å‡∏•‡πâ‡∏≠‡∏á‡∏Å‡πà‡∏≠‡∏ô
      if (objectUrl) {
        URL.revokeObjectURL(objectUrl);
        setObjectUrl(null);
      }
      const reader = new FileReader();
      reader.onloadend = () => {
        setPreview(reader.result);
      };
      reader.readAsDataURL(file);
      onImageSelected(file);
    }
  };

  const handleRemoveImage = () => {
    setPreview(null);
    onImageSelected(null);
    if (objectUrl) {
      URL.revokeObjectURL(objectUrl);
      setObjectUrl(null);
    }
    if (fileInputRef.current) {
      fileInputRef.current.value = "";
    }
    stopCamera(); // ‡∏´‡∏¢‡∏∏‡∏î‡∏Å‡∏•‡πâ‡∏≠‡∏á‡∏î‡πâ‡∏ß‡∏¢‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
  };

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏•‡πâ‡∏≠‡∏á
  const startCamera = async () => {
    if (disabled) return;
    setPreview(null); // ‡∏•‡πâ‡∏≤‡∏á‡∏û‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏à‡∏∞‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏•‡πâ‡∏≠‡∏á

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ browser ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö mediaDevices ‡πÅ‡∏•‡∏∞ getUserMedia ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if (
      typeof navigator === "undefined" ||
      !navigator.mediaDevices ||
      typeof navigator.mediaDevices.getUserMedia !== "function"
    ) {
      alert("‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏Å‡∏•‡πâ‡∏≠‡∏á");
      setShowCamera(false);
      return;
    }

    try {
      // ‡∏Ç‡∏≠‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏Å‡∏•‡πâ‡∏≠‡∏á
      const stream = await navigator.mediaDevices.getUserMedia({ video: true });
      if (videoRef.current) {
        videoRef.current.srcObject = stream;
        videoRef.current.play(); // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏•‡πà‡∏ô‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠
      }
      setVideoStream(stream);
      setShowCamera(true);
    } catch (err) {
      console.error("Error accessing camera: ", err);
      alert("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏Å‡∏•‡πâ‡∏≠‡∏á‡πÑ‡∏î‡πâ: " + err.message);
      setShowCamera(false);
    }
  };

  const stopCamera = () => {
    if (videoStream) {
      videoStream.getTracks().forEach(track => track.stop()); // ‡∏´‡∏¢‡∏∏‡∏î track ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô stream
      setVideoStream(null);
    }
    setShowCamera(false);
  };

  const takePhoto = () => {
    if (disabled || !videoRef.current || !canvasRef.current) return;

    const video = videoRef.current;
    const canvas = canvasRef.current;
    const context = canvas.getContext('2d');

    // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ç‡∏ô‡∏≤‡∏î canvas ‡πÉ‡∏´‡πâ‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡∏Ç‡∏≠‡∏á‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠
    canvas.width = video.videoWidth;
    canvas.height = video.videoHeight;

    // ‡∏ß‡∏≤‡∏î‡πÄ‡∏ü‡∏£‡∏°‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏à‡∏≤‡∏Å‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡∏•‡∏á‡∏ö‡∏ô canvas
    context.drawImage(video, 0, 0, canvas.width, canvas.height);

    // ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÉ‡∏ô canvas ‡πÄ‡∏õ‡πá‡∏ô Blob (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á File object)
    canvas.toBlob((blob) => {
      if (blob) {
        // ‡∏™‡∏£‡πâ‡∏≤‡∏á File object ‡∏à‡∏≤‡∏Å Blob
        const file = new File([blob], `photo_${Date.now()}.png`, { type: 'image/png' });
        
        if (objectUrl) {
          URL.revokeObjectURL(objectUrl);
        }
        const url = URL.createObjectURL(blob);
        setPreview(url); // ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏π‡∏õ‡∏ó‡∏µ‡πà‡∏ñ‡πà‡∏≤‡∏¢‡πÉ‡∏ô‡∏û‡∏£‡∏µ‡∏ß‡∏¥‡∏ß
        setObjectUrl(url);
        onImageSelected(file); // ‡∏™‡πà‡∏á File object ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ
        stopCamera(); // ‡∏´‡∏¢‡∏∏‡∏î‡∏Å‡∏•‡πâ‡∏≠‡∏á‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏ñ‡πà‡∏≤‡∏¢‡∏£‡∏π‡∏õ
      }
    }, 'image/png'); // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏≠‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
  };

  return (
    <div className="w-full">
      <label className="block text-sm font-medium text-gray-900 mb-1">
        ‡πÅ‡∏ô‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û (‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î / ‡∏ñ‡πà‡∏≤‡∏¢‡∏£‡∏π‡∏õ)
      </label>
      <div className="text-xs text-blue-700 bg-blue-50 border border-blue-200 rounded p-2 mb-3">
        üí° <strong>‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏:</strong> ‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏™‡∏£‡∏¥‡∏° ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏î‡πâ ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡πÑ‡∏ß‡πâ‡πÉ‡∏´‡πâ ‡πÅ‡∏•‡∏∞‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÑ‡∏î‡πâ‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á
      </div>
      <div className="mt-2 flex items-start gap-4">
        {/* ‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏û‡∏£‡∏µ‡∏ß‡∏¥‡∏ß / ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡∏à‡∏≤‡∏Å‡∏Å‡∏•‡πâ‡∏≠‡∏á */}
        <div className="w-32 h-32 rounded-lg border-2 border-dashed border-gray-300 flex items-center justify-center bg-gray-50 overflow-hidden flex-shrink-0">
          {showCamera ? (
            // ‡πÅ‡∏™‡∏î‡∏á video stream ‡∏´‡∏≤‡∏Å‡∏Å‡∏•‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà
            <video ref={videoRef} autoPlay playsInline className="w-full h-full object-cover"></video>
          ) : preview ? (
            // ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏û‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏´‡∏≤‡∏Å‡∏°‡∏µ
            <img src={preview} alt="Preview" className="w-full h-full object-cover" />
          ) : (
            // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° "‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á" ‡∏´‡∏≤‡∏Å‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏•‡πâ‡∏≠‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏õ‡∏¥‡∏î
            <div className="text-center">
              <span className="text-sm text-gray-500">‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á</span>
              <div className="text-xs text-gray-400 mt-1">‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û</div>
            </div>
          )}
          {/* Canvas ‡∏ó‡∏µ‡πà‡∏ã‡πà‡∏≠‡∏ô‡πÑ‡∏ß‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏ö‡∏†‡∏≤‡∏û */}
          <canvas ref={canvasRef} style={{ display: 'none' }}></canvas>
        </div>

        {/* ‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô */}
        <div className="flex flex-col gap-2 flex-1">
          <input
            type="file"
            accept="image/png, image/jpeg, image/gif, image/webp"
            onChange={handleFileChange}
            ref={fileInputRef}
            disabled={disabled || showCamera}
            className="hidden"
            id="image-upload-input"
          />
          
          <div className="grid grid-cols-1 sm:grid-cols-2 gap-2">
            <label
              htmlFor="image-upload-input"
              className={`cursor-pointer text-center rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50 transition-colors ${disabled || showCamera ? 'opacity-50 cursor-not-allowed' : ''}`}
            >
              üìÅ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
            </label>

            {/* ‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏Å‡∏•‡πâ‡∏≠‡∏á */}
            {!showCamera ? (
              <button
                type="button"
                onClick={startCamera}
                disabled={disabled}
                className="rounded-md bg-blue-50 px-3 py-2 text-sm font-semibold text-blue-600 shadow-sm hover:bg-blue-100 disabled:opacity-50 transition-colors"
              >
                üì∑ ‡∏ñ‡πà‡∏≤‡∏¢‡∏£‡∏π‡∏õ
              </button>
            ) : (
              <>
                <button
                  type="button"
                  onClick={takePhoto}
                  disabled={disabled}
                  className="rounded-md bg-green-50 px-3 py-2 text-sm font-semibold text-green-600 shadow-sm hover:bg-green-100 disabled:opacity-50 transition-colors"
                >
                  üì∏ ‡∏ñ‡πà‡∏≤‡∏¢
                </button>
                <button
                  type="button"
                  onClick={stopCamera}
                  disabled={disabled}
                  className="rounded-md bg-red-50 px-3 py-2 text-sm font-semibold text-red-600 shadow-sm hover:bg-red-100 disabled:opacity-50 transition-colors"
                >
                  ‚ùå ‡∏õ‡∏¥‡∏î‡∏Å‡∏•‡πâ‡∏≠‡∏á
                </button>
              </>
            )}
          </div>

          {/* ‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û */}
          {preview && !showCamera && (
            <button
              type="button"
              onClick={handleRemoveImage}
              disabled={disabled}
              className="rounded-md bg-red-50 px-3 py-2 text-sm font-semibold text-red-600 shadow-sm hover:bg-red-100 disabled:opacity-50 transition-colors"
            >
              üóëÔ∏è ‡∏•‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
            </button>
          )}
          
          {/* ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏•‡πâ‡∏≠‡∏á */}
          {showCamera && (
            <div className="text-xs text-blue-600 bg-blue-50 p-2 rounded">
              üìπ ‡∏Å‡∏•‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà - ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° "‡∏ñ‡πà‡∏≤‡∏¢" ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏±‡∏ö‡∏†‡∏≤‡∏û
            </div>
          )}
        </div>
      </div>
    </div>
  );
};

export default ImageUpload;